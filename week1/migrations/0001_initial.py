# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-12-09 20:53
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.CharField(blank=True, max_length=100, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteFolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_one_id', models.IntegerField()),
                ('user_two_id', models.IntegerField()),
                ('actionuser', models.IntegerField()),
                ('status', models.IntegerField(verbose_name=[0, 1, 2, 3])),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(blank=True, default=b'', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Hatsoff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_one_id', models.IntegerField()),
                ('user_two_id', models.IntegerField()),
                ('actionuser', models.IntegerField()),
                ('status', models.IntegerField(verbose_name=[0, 1, 2, 3])),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=30, unique=True)),
                ('count', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default=b'photoimg/profileimage.png', upload_to=b'photoimg/')),
                ('displayname', models.CharField(blank=True, default=b'', max_length=100)),
                ('profession1', models.CharField(blank=True, default=b'', max_length=200)),
                ('profession2', models.CharField(blank=True, default=b'', max_length=200)),
                ('profession3', models.CharField(blank=True, default=b'', max_length=200)),
                ('profession4', models.CharField(blank=True, default=b'', max_length=200)),
                ('profession5', models.CharField(blank=True, default=b'', max_length=200)),
                ('worksAt', models.CharField(blank=True, default=b'', max_length=100)),
                ('city', models.CharField(blank=True, default=b'', max_length=100)),
                ('education', models.CharField(blank=True, default=b'', max_length=200)),
                ('birthyear', models.DateTimeField(blank=True, null=True)),
                ('birthdate', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(blank=True, default=b'', max_length=100)),
                ('describe', models.CharField(blank=True, default=b'', max_length=80)),
                ('skill1', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill2', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill3', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill4', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill5', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill6', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill7', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill8', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill9', models.CharField(blank=True, default=b'', max_length=200)),
                ('skill10', models.CharField(blank=True, default=b'', max_length=200)),
                ('weburl', models.URLField(blank=True, null=True)),
                ('collaborators', models.CharField(blank=True, default=b'', max_length=300)),
                ('interestproject', models.IntegerField(blank=True, null=True)),
                ('explore', models.CharField(blank=True, default=b'', max_length=200)),
                ('availableHours', models.IntegerField(blank=True, null=True)),
                ('rate', models.CharField(blank=True, default=b'', max_length=200)),
                ('hobby', models.CharField(blank=True, default=b'', max_length=200)),
                ('fQuote', models.CharField(blank=True, default=b'', max_length=200)),
                ('fFilm', models.CharField(blank=True, default=b'', max_length=200)),
                ('fBook', models.CharField(blank=True, default=b'', max_length=200)),
                ('filmNow', models.CharField(blank=True, default=b'', max_length=200)),
                ('cities', models.CharField(blank=True, default=b'', max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Showcase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default=b'', max_length=200)),
                ('number', models.IntegerField(null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=b'showcaseimg/')),
                ('video', models.FileField(blank=True, null=True, upload_to=b'showcaseimg/')),
                ('youtube', models.URLField(blank=True, null=True)),
                ('describe', models.CharField(blank=True, default=b'', max_length=500)),
                ('role1', models.CharField(blank=True, default=b'', max_length=300)),
                ('role2', models.CharField(blank=True, default=b'', max_length=300)),
                ('role3', models.CharField(blank=True, default=b'', max_length=300)),
                ('role4', models.CharField(blank=True, default=b'', max_length=300)),
                ('role5', models.CharField(blank=True, default=b'', max_length=300)),
                ('completion', models.IntegerField(blank=True, null=True)),
                ('tag1', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag2', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag3', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag4', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag5', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag6', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag7', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag8', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag9', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag10', models.CharField(blank=True, default=b'', max_length=300)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=30, unique=True)),
                ('count', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UpcomingWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default=b'', max_length=200)),
                ('number', models.IntegerField()),
                ('image', models.FileField(blank=True, null=True, upload_to=b'showcaseimg/')),
                ('describe', models.CharField(blank=True, default=b'', max_length=500)),
                ('role1', models.CharField(blank=True, default=b'', max_length=300)),
                ('role2', models.CharField(blank=True, default=b'', max_length=300)),
                ('role3', models.CharField(blank=True, default=b'', max_length=300)),
                ('role4', models.CharField(blank=True, default=b'', max_length=300)),
                ('role5', models.CharField(blank=True, default=b'', max_length=300)),
                ('status', models.CharField(blank=True, default=b'', max_length=300)),
                ('targetstartdate', models.DateTimeField(blank=True, null=True)),
                ('targetfinishdate', models.DateTimeField(blank=True, null=True, verbose_name=300)),
                ('comment', models.CharField(blank=True, default=b'', max_length=300)),
                ('get_help', models.IntegerField(blank=True, null=True)),
                ('collaborator1', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator2', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator3', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator4', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator5', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill1', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill2', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill3', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill4', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill5', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill6', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill7', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill8', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill9', models.CharField(blank=True, default=b'', max_length=300)),
                ('collaborator_skill10', models.CharField(blank=True, default=b'', max_length=300)),
                ('fund', models.CharField(blank=True, default=b'', max_length=200)),
                ('preferred_city', models.CharField(blank=True, default=b'', max_length=200)),
                ('often', models.CharField(blank=True, default=b'', max_length=300)),
                ('time_commitment', models.DateTimeField(blank=True, null=True)),
                ('give_back', models.IntegerField(blank=True, null=True)),
                ('comment_help', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag1', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag2', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag3', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag4', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag5', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag6', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag7', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag8', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag9', models.CharField(blank=True, default=b'', max_length=300)),
                ('tag10', models.CharField(blank=True, default=b'', max_length=300)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
